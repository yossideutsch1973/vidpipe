name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  workflow_dispatch:

jobs:
  test:
    name: Test Python ${{ matrix.python-version }} on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.8", "3.9", "3.10", "3.11", "3.12"]
        os: [ubuntu-latest, windows-latest, macOS-latest]
        
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
        cache: 'pip'
    
    - name: Install system dependencies (Ubuntu)
      if: matrix.os == 'ubuntu-latest'
      run: |
        sudo apt-get update
        sudo apt-get install -y libgl1-mesa-glx libglib2.0-0 libsm6 libxext6 libfontconfig1 libxrender1
    
    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: Run test suite
      run: make test
      env:
        # Ensure headless mode for GUI tests
        QT_QPA_PLATFORM: offscreen
        DISPLAY: :99
    
    - name: Test CLI functionality
      run: |
        python main.py --cli --help
        python main.py --cli -c "test-pattern -> grayscale" --tokens
        python main.py --cli -c "test-pattern -> grayscale" --ast

  frontend:
    name: Frontend Build and Test
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Build TypeScript
      run: npm run build
    
    - name: Verify build artifacts
      run: |
        test -f docs/main.js
        ls -la docs/main.js

  code-quality:
    name: Code Quality Checks
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        cache: 'pip'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install flake8 black isort mypy
    
    - name: Check code formatting with Black
      run: black --check --diff .
      continue-on-error: true
    
    - name: Check import sorting with isort
      run: isort --check-only --diff .
      continue-on-error: true
    
    - name: Lint with flake8
      run: flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
      continue-on-error: true
    
    - name: Type checking with mypy
      run: mypy vidpipe/ --ignore-missing-imports
      continue-on-error: true

  integration:
    name: Integration Tests
    runs-on: ubuntu-latest
    needs: [test, frontend]
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        cache: 'pip'
    
    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
    
    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y libgl1-mesa-glx libglib2.0-0 libsm6 libxext6 libfontconfig1 libxrender1
    
    - name: Install all dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        npm ci
    
    - name: Build frontend
      run: npm run build
    
    - name: Run comprehensive tests
      run: make test
      env:
        QT_QPA_PLATFORM: offscreen
        DISPLAY: :99
    
    - name: Test example pipelines
      run: |
        python main.py --cli -f examples/simple.vp --tokens
        python main.py --cli -f examples/comprehensive_demo.vp --ast
      continue-on-error: true
    
    - name: Upload test artifacts
      if: always()
      uses: actions/upload-artifact@v3
      with:
        name: test-results
        path: |
          docs/main.js
          **/*.log