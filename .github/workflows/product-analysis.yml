name: Product Market Analysis

on:
  workflow_dispatch:
    inputs:
      project_type:
        description: 'Project type for analysis'
        required: false
        default: 'auto-detect'
        type: choice
        options:
          - 'auto-detect'
          - 'video-processing'
          - 'web-framework'
          - 'ml-library'
          - 'cli-tool'
          - 'generic-software'
      create_issue:
        description: 'Create GitHub issue with results'
        required: false
        default: true
        type: boolean

  issue_comment:
    types: [created]

  schedule:
    - cron: '0 0 * * 0'

jobs:
  analyze:
    if: >
      github.event_name == 'workflow_dispatch' ||
      github.event_name == 'schedule' ||
      (github.event_name == 'issue_comment' && contains(github.event.comment.body, 'analyze'))
    runs-on: ubuntu-latest
    permissions:
      contents: read
      issues: write
      pull-requests: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -e .

      - name: Run Product Analysis
        run: |
          PROJECT_TYPE="${{ github.event.inputs.project_type || 'auto-detect' }}"
          if [[ "$PROJECT_TYPE" == "auto-detect" ]]; then
            python product_analysis_cli.py . --json --verbose
          else
            python product_analysis_cli.py . --type "$PROJECT_TYPE" --json --verbose
          fi

      - name: Comment on Issue
        if: github.event_name == 'issue_comment'
        uses: actions/github-script@v7
        with:
          script: |
            const body = '## 🔍 Product Analysis Complete\n\nThe product market analysis has been completed successfully.\n\n**Files Generated:**\n- Analysis Report: `PRODUCT_MARKET_ANALYSIS.md`\n- Raw Data: `PRODUCT_MARKET_ANALYSIS.json`\n\nCheck the workflow artifacts for the complete analysis report.\n\n*Analysis triggered by: @${{ github.actor }}*';
            
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              body: body
            });

      - name: Create GitHub Issue
        if: >
          (github.event_name == 'workflow_dispatch' && github.event.inputs.create_issue == 'true') ||
          github.event_name == 'schedule'
        uses: actions/github-script@v7
        with:
          script: |
            const title = github.event_name === 'schedule' ? 
              '📊 Product Market Analysis - Weekly Update' : 
              '📊 Product Market Analysis';
            
            const body = `## 📊 Product Market Analysis Results\n\n**Analysis Date:** ${new Date().toISOString()}\n**Trigger:** ${{ github.event_name }}\n\nThe product market analysis has been completed successfully.\n\n## 📁 Generated Files\n\n- **Analysis Report**: \`PRODUCT_MARKET_ANALYSIS.md\`\n- **Raw Analysis Data**: \`PRODUCT_MARKET_ANALYSIS.json\`\n\nDownload the workflow artifacts to access the complete analysis.\n\n---\n*Generated automatically by the Product Analysis Agent*`;
            
            await github.rest.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: title,
              body: body,
              labels: ['analysis', 'product-management', 'documentation']
            });

      - name: Upload Analysis Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: product-analysis-${{ github.run_number }}
          path: |
            PRODUCT_MARKET_ANALYSIS.md
            PRODUCT_MARKET_ANALYSIS.json
          retention-days: 30

      - name: Analysis Complete
        run: |
          echo "✅ Product Analysis Complete!"
          echo "📁 Check workflow artifacts for detailed results"